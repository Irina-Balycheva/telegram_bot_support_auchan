import os
import telebot
from telebot import types
import json
import io
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from config import TG_BOT_TOKEN, IAM_TOKEN, FOLDER_ID, bucket_name
# –ò–ò –ß–∞—Ç–ì–ü–¢
from chatGPT.chatGPT import chatGPT
# –ì–æ–ª–æ—Å–æ–≤–æ–π —Å–∏–Ω—Ç–µ–∑ –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
from SpeechKit.speechkit import voice_to_text, text_to_voice
# –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
from YandexVision.Vision import Vision
# –ë–î PostgreSQL
from Database.ClassDatabase import DatabaseLogs
# –û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ OBJECT STORAGE
from Database.StorageDB import StorageDB

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = telebot.TeleBot(TG_BOT_TOKEN)

HELP = '''
/help - –ú–µ–Ω—é –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
/start - chatGPT
'''

# –ó–¥–µ—Å—å –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤—Å–µ –ø–µ—Ä–µ–ø–∏—Å–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
comments = {}

# –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫
@bot.message_handler(commands=['help'])
def start(message):
    bot.send_message(message.chat.id, HELP)

# chatGPT
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –±–æ—Ç –ê—à–∞–Ω, c–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ, –±—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å!")
    chat_auchan = chatGPT(message.from_user.id)

    # –°–æ–∑–¥–∞–Ω–∏–µ –ë–î
    DB = DatabaseLogs()
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    DB.connect()
    # –£–¥–∞–ª–µ–Ω–∏–µ –ë–î
    # DB.drop_table()
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã
    # DB.create_table()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ID_CLIENT = int(message.from_user.id)
    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
    DB.insert_client(ID_CLIENT, str(datetime.now()), 'last_time')

    # –ì–æ–ª–æ—Å–æ–≤–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
    VtoT = voice_to_text()
    # –°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏
    TtoV = text_to_voice()

    @bot.message_handler(content_types=["text"])
    def echo(message):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å —á–∞—Ç–ì–ü–¢
        chat_auchan.prompt(content=message.text)
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¢–ì –ë–û–¢
        bot.send_message(message.chat.id, f'{chat_auchan.chat_response}')

        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ —Å —Ç–µ–∫—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
        make_voice_and_push(message, TtoV)

        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        INSERT_DB(message, chat_auchan, DB)


    @bot.message_handler(content_types=['voice'])
    def voice_processing(message):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        file_info = bot.get_file(message.voice.file_id)
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Ñ–∞–π–ª–∞
        file_id = message.voice.file_id
        downloaded_file = bot.download_file(file_info.file_path)
        file_extension = file_info.file_path.split(".")[-1]

        # –ü–æ–ª—É—á–∏—Ç–µ –±–∞–π—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        data_stream = io.BytesIO(downloaded_file)
        object_name = f'voice/{message.from_user.id}/{file_id}.{file_extension}'

        # –û–±–ª–∞—á–Ω–∞—è –ë–î
        SDB = StorageDB()

        try:
            SDB.load_object_in_bucket_string(
                bucket_name=bucket_name,
                object_name=object_name,
                body_name=data_stream,
                storage_class='COLD')

        except Exception as ex:
            print(ex)
            bot.send_message(message.from_user.id, f'ERROR: \n {ex}')

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ —Å –æ–±–∞–ª–∫–∞
        voice_data = SDB.give_object(bucket_name=bucket_name, file_name=object_name)

        # –í—ã–∑–æ–≤ –∫–ª–∞—Å—Å–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç
        VtoT.translate(voice_data=voice_data)

        if (VtoT.text == None or VtoT.text == ''):
            bot.send_message(message.chat.id, f'–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É. –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.')
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            bot.send_message(message.chat.id, f'–¢–µ–∫—Å—Ç —Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {VtoT.text}')

        print('prompt:', VtoT.text)
        bot.send_message(message.chat.id, f'–í–∞—à –≤–æ–ø—Ä–æ—Å: {VtoT.text}')

        chat_auchan.prompt(content=VtoT.text, voice_file=True)

        bot.send_message(message.chat.id, f'{chat_auchan.chat_response}')

        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ —Å —Ç–µ–∫—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
        make_voice_and_push(message, TtoV)

        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        INSERT_DB(message, chat_auchan, DB, voice_file=True)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ, —Ç–æ –∑–∞–∫–∏–¥—ã–≤–∞–µ–º –µ–≥–æ –≤ –ë–î
    @bot.message_handler(content_types=["photo"])
    def echo(message):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        file_info = bot.get_file(message.photo[-1].file_id)
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Ñ–∞–π–ª–∞
        file_id = message.photo[-1].file_id
        downloaded_file = bot.download_file(file_info.file_path)
        file_extension = file_info.file_path.split(".")[-1]

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–π—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        data_stream = io.BytesIO(downloaded_file)
        object_name = f'photo/{message.from_user.id}/{file_id}.{file_extension}'

        # –û–±–ª–∞—á–Ω–∞—è –ë–î
        SDB = StorageDB()

        try:
            SDB.load_object_in_bucket_string(
                bucket_name=bucket_name,
                object_name=object_name,
                body_name=data_stream,
                storage_class='COLD')

        except Exception as ex:
            print(ex)
            bot.send_message(message.from_user.id, f'ERROR: \n {ex}')

        # –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        bot.reply_to(message, "–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏ –ø—Ä–∏–Ω—è—Ç–æ. –ü–µ—Ä–µ–¥–∞–Ω–æ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è.")

        # –í—ã–∑–æ–≤ –∫–ª–∞—Å—Å–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        CV = Vision(IAM_TOKEN, FOLDER_ID)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ —Å –æ–±–∞–ª–∫–∞
        image_data = SDB.give_object(bucket_name=bucket_name, file_name=object_name)
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        json_data = CV.request_analyze(image_data=image_data)

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–∞
        text = ' '.join(CV.extract_text(json_data))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        # bot.send_message(message.chat.id, f'–¢–ï–ö–°–¢ –° –§–û–¢–û: \n {text}')

        chat_auchan.prompt(content=text, photo_file=True)

        bot.send_message(message.chat.id, f'{chat_auchan.chat_response}')

        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ —Å —Ç–µ–∫—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
        make_voice_and_push(message, TtoV)

        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        INSERT_DB(message, chat_auchan, DB, photo_file=True)

def show_smiley_keyboard(chat_id):
    keyboard = types.InlineKeyboardMarkup(row_width=5)
    keyboard.add(
        types.InlineKeyboardButton('üò¢', callback_data='sad'),
        types.InlineKeyboardButton('üòû', callback_data='unhappy'),
        types.InlineKeyboardButton('üòê', callback_data='neutral'),
        types.InlineKeyboardButton('üòä', callback_data='happy'),
        types.InlineKeyboardButton('üòÉ', callback_data='smiling')
    )
    bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è:', reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    chat_id = call.message.chat.id
    if call.data == 'sad':
        bot.send_message(chat_id, '–ñ–∞–ª—å, —á—Ç–æ –í—ã –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ–¥–æ–≤–æ–ª—å–Ω—ã –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º! –ë—É–¥–µ–º –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã, –µ—Å–ª–∏ –í—ã –æ—Å—Ç–∞–≤–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. \
            –¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º —É—á–µ—Å—Ç—å –í–∞—à–∏ –∑–∞–º–µ—á–∞–Ω–∏—è –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è!')
        bot.register_next_step_handler(call.message, save_comment, call.data)
    elif call.data == 'unhappy':
        bot.send_message(chat_id, '–ñ–∞–ª—å, —á—Ç–æ –í—ã –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ–¥–æ–≤–æ–ª—å–Ω—ã –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º! –ë—É–¥–µ–º –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã, –µ—Å–ª–∏ –í—ã –æ—Å—Ç–∞–≤–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. \
            –¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º —É—á–µ—Å—Ç—å –í–∞—à–∏ –∑–∞–º–µ—á–∞–Ω–∏—è –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è!')
        bot.register_next_step_handler(call.message, save_comment, call.data)
    elif call.data == 'neutral':
        bot.send_message(call.message.chat.id, '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –æ—Ü–µ–Ω–∫—É!')
    elif call.data == 'happy':
        bot.send_message(call.message.chat.id, '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –æ—Ü–µ–Ω–∫—É! –í—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!')
    elif call.data == 'smiling':
        bot.send_message(call.message.chat.id, '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –æ—Ü–µ–Ω–∫—É! –í—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!')

# –°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ —Å —Ç–µ–∫—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
def make_voice_and_push(message, TtoV):
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ —Ä–µ—á—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ø–Ω–¥–µ–∫—Å SpeechKit. –ê —Ç–∞–∫–∂–µ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –ø–æ–±–∞–π—Ç–æ–≤–æ–º –≤–∏–¥–µ
    audio_data = b''.join(TtoV.translate(message.text))
    # audio_data = TtoV.translate(chat_auchan.chat_response)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç Telegram
    voice_message_stream = io.BytesIO(audio_data)
    # –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    voice_message_stream.name = 'voice.ogg'
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¢–ì –ë–û–¢
    bot.send_voice(message.chat.id, voice_message_stream)

# –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
def INSERT_DB(message, chat_auchan, DB, voice_file=None, photo_file=None):
    DB.connect()
    DB.insert_dialog(
        question=message.text,
        answer=chat_auchan.chat_response,
        intent=chat_auchan.intent,
        common_token=chat_auchan.conv_history_tokens,
        time_dialog=str(datetime.now()),
        voice_file=str(voice_file),
        photo_file=str(photo_file),
        ID_client=DB.ID_client
    )

    if (chat_auchan.end_dialog):
        show_smiley_keyboard(message.chat.id)
        DB.update_correspondence_end_time(str(datetime.now()), DB.ID_client)
        chat_auchan.end_dialog = False

    DB.select_all()
    DB.close()

def save_comment(message, emoji):
    comment = message.text
    comments[emoji] = comment
    with open('comments.json', 'w') as file:
        json.dump(comments, file)
    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π! –ú—ã —Ü–µ–Ω–∏–º –í–∞—à–µ –º–Ω–µ–Ω–∏–µ.')


bot.polling(none_stop=True)
